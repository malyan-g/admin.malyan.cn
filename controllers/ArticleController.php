<?php
/**
 * Created by PhpStorm.
 * User: M
 * Date: 17/10/12
 * Time: 上午10:25
 */

namespace app\controllers;

use app\models\ArticleAttach;
use Yii;
use app\models\Article;
use yii\web\UploadedFile;
use app\models\OperateLog;
use app\models\search\ArticleSearch;
use app\components\helpers\UploadHelper;

/**
 * 文章管理
 * Class ArticleController
 * @package app\controllers
 */
class ArticleController extends Controller
{
    /**
     * @inheritdoc
     */
    public function beforeAction($action)
    {
        $this->operateModule = OperateLog::EVENT_MODULE_ARTICLE;
        return parent::beforeAction($action); // TODO: Change the autogenerated stub
    }

    /**
     * 列表
     * @return string
     */
    public function actionList()
    {
        $searchModel = new ArticleSearch();
        $dataProvider = $searchModel->search(Yii::$app->request->queryParams);
        return $this->render('list',[
            'searchModel'=>$searchModel,
            'dataProvider'=>$dataProvider
        ]);
    }

    /**
     * 创建
     * @return string|\yii\web\Response
     */
    public function actionCreate()
    {
        return $this->save();
    }

    /**
     * 更新
     * @return string|\yii\web\Response
     */
    public function actionUpdate()
    {
        return $this->save(false);
    }

    /**
     * 详情
     * @return string
     */
    public function actionView()
    {
        return $this->render('view',[
            'model' => $this->findArticle()
        ]);
    }

    /**
     * 删除
     * @return \yii\web\Response
     * @throws \Exception
     * @throws \Throwable
     */
    public function actionDelete()
    {
        $model = $this->findArticle();
        if($model->delete()){
            $this->operateId = $model->id;
            $this->alert(Yii::t('common','Delete Successfully'), self::ALERT_SUCCESS);
        }else{
            $this->alert(Yii::t('common','Delete Failure'));
        }
        return $this->redirect(Yii::$app->request->referrer);
    }

    /**
     * 保存
     * @param bool $isCreate
     * @return string|\yii\web\Response
     * @throws \yii\web\NotFoundHttpException
     */
    private function save($isNewRecord = true)
    {
        $article = $isNewRecord ? new Article() : $this->findArticle();
        $articleAttach = $isNewRecord ? new ArticleAttach() : $this->findArticleAttach();
        
        $request = Yii::$app->request;
        if($request->isPost){
            $data = $request->post();
            if($article->load($data) && $article->validate()
                && $articleAttach->load($data) && $articleAttach->validate()){
                $transaction = Yii::$app->db->beginTransaction();
                try{
                    $article->save(false);
                    $articleAttach->article_id = $article->id;
                    $articleAttach->save(false);
                    $transaction->commit();
                    $this->operateId = $article->id;
                    $this->alert(Yii::t('common', $isNewRecord ? 'Create Successfully' : 'Update Successfully'), self::ALERT_SUCCESS);
                    if($isNewRecord){
                        return $this->redirect('create');
                    }
                }catch (\Exception $e){
                    $transaction->rollBack();
                    $this->alert(Yii::t('common', $isNewRecord ? 'Create Failure' : 'Update Failure'));
                }
            }else{
                $this->exception(Yii::t('common', 'Illegal Operation'));
            }
        }
        return $this->render('form',[
            'article' => $article,
            'articleAttach' => $articleAttach
        ]);
    }

    /**
     * 查询
     * @return  Article the loaded model
     * @throws \yii\web\NotFoundHttpException
     */
    public function findArticle()
    {
        $id = (int) Yii::$app->request->get('id', 0);
        if($id){
            if(($model = Article::findOne($id)) !== null){
                return $model;
            }
        }
        $this->exception(Yii::t('common', 'Illegal Request'));
    }

    /**
     * 查询
     * @return  ArticleAttach the loaded model
     * @throws \yii\web\NotFoundHttpException
     */
    public function findArticleAttach()
    {
        $id = (int) Yii::$app->request->get('id', 0);
        if($id){
            if(($model = ArticleAttach::findOne(['article_id' => $id])) !== null){
                return $model;
            }
        }
        $this->exception(Yii::t('common', 'Illegal Request'));
    }
}
